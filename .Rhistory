orig_layer <- as.cimg(layers[[i]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
}
layer_idx <- 1:8
clean_val <- 4
fill_val <- 2
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in layer_idx) {
orig_layer <- as.cimg(layers[[i]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
}
plot(cimg_obj)
plot(orig_layer)
is.pixset(orig_layer)
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
plot(cimg_obj)
orig_layer <- as.cimg(layers[[i]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
plot(cimg_obj)
for (i in layer_idx) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[i, ]
} # NOTE: I need an option here for other colors
orig_layer <- as.cimg(layers[[i]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
recolorize.obj <- recolorize(img)
layer_idx <- 1:8
clean_val <- 4
fill_val <- 2
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
plot(cimg(obj))
plot(cimg_obj)
recolorize.obj <- recolorize(img)
layer_idx <- 1:8
clean_val <- 4
fill_val <- 4
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
plot(cimg_obj)
recolorize.obj <- recolorize(img)
layer_idx <- 1:8
clean_val <- 2
fill_val <- 2
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
plot(cimg_obj)
?fill
recolorize.obj <- recolorize(img)
layer_idx <- 1:8
clean_val <- 0
fill_val <- 0
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
plot(cimg_obj)
layer_idx <- 1:8
clean_val <- 0
fill_val <- 0
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
plot(cimg_obj)
plotImageArray(recolorize:::cimg.to.array(cimg_obj))
recolorize.obj <- recolorize(img)
layer_idx <- 1:8
clean_val <- 2
fill_val <- 0
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
plotImageArray(recolorize:::cimg.to.array(cimg_obj))
recolorize.obj <- recolorize(img)
layer_idx <- 1:8
clean_val <- 2
fill_val <- 3
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
plotImageArray(recolorize:::cimg.to.array(cimg_obj))
layer_idx <- 1:8
clean_val <- 0
fill_val <- 3
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
plotImageArray(recolorize:::cimg.to.array(cimg_obj))
recolorize.obj <- recolorize(img)
layer_idx <- 1:8
clean_val <- 1
fill_val <- 3
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
plotImageArray(recolorize:::cimg.to.array(cimg_obj))
layer_idx <- 1:8
clean_val <- 1
fill_val <- 1
change_to <- "original"
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
plotImageArray(recolorize:::cimg.to.array(cimg_obj))
cleanLayers <- function(recolorize.obj,
layer_idx = "all",
clean = 2, fill = 2,
color_to = "original") {
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
if (layer_idx == "all") {
layer_idx <- 1:nrow(recolorize.obj$centers)
}
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- colorise(cimg_obj, orig_layer, "white")
new_layer <- clean(fill(as.cimg(orig_layer), fill_val), clean_val)
cimg_obj <- colorise(cimg_obj, new_layer, col = col_to)
}
return(recolorize:::cimg.to.array(cimg_obj))
}
cleanLayers <- function(recolorize.obj,
layer_idx = "all",
clean = 2, fill = 2,
color_to = "original") {
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
if (layer_idx == "all") {
layer_idx <- 1:nrow(recolorize.obj$centers)
}
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- imager::as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- imager::colorise(cimg_obj, orig_layer, "white")
new_layer <- imager::fill(imager::as.cimg(orig_layer), fill)
new_layer <- imager::clean(new_layer, clean)
cimg_obj <- imager::colorise(cimg_obj, new_layer, col = col_to)
}
return(recolorize:::cimg.to.array(cimg_obj))
}
plotImageArray(cleanLayers(recolorize.obj,
clean = 0,
fill = 1))
plotImageArray(cleanLayers(recolorize.obj,
clean = 0,
fill = 2))
plotImageArray(cleanLayers(recolorize.obj,
clean = 0,
fill = 3))
plotImageArray(cleanLayers(recolorize.obj,
clean = 0,
fill = 2))
plotImageArray(cleanLayers(recolorize.obj,
clean = 1,
fill = 2))
plotImageArray(cleanLayers(recolorize.obj,
clean = 2,
fill = 2))
plotImageArray(cleanLayers(recolorize.obj,
clean = 2,
fill = 3))
plotImageArray(cleanLayers(recolorize.obj,
clean = 2,
fill = 4))
plotImageArray(cleanLayers(recolorize.obj,
clean = 2,
fill = 5))
plotImageArray(cleanLayers(recolorize.obj,
clean = 2,
fill = 6))
plotImageArray(cleanLayers(recolorize.obj,
clean = 2,
fill = 7))
plotImageArray(cleanLayers(recolorize.obj,
clean = 2,
fill = 2))
plotImageArray(cleanLayers(recolorize.obj,
clean = 2,
fill = 3))
layout(matrix(1:8, nrow = 2))
sapply(1:8, plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
layout(matrix(1:8, nrow = 2))
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
layout(matrix(1:8, nrow = 2))
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
layout(matrix(1:8, nrow = 2))
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = 0,
fill = i)))
layout(1:8)
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = 0,
fill = i)))
layout(matrix(1:8, nrow = 1))
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = 0,
fill = i)))
layout(matrix(1:8, nrow = 1))
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = i)))
layout(matrix(1:8, nrow = 1))
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
dir(system.file("extdata/", package = "recolorize"))
dir(system.file("extdata/", package = "recolorize"), full.names = TRUE)
imgs <- dir(system.file("extdata/", package = "recolorize"), full.names = TRUE)
recolorize.obj <- recolorize(imgs[1])
layout(matrix(1:8, nrow = 1))
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
recolorize.obj <- recolorize(imgs[2])
recolorize.obj <- recolorize(imgs[3])
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
recolorize.obj <- recolorize(imgs[4])
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
recolorize.obj <- recolorize(imgs[5])
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
recolorize.obj <- recolorize(imgs[6])
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
imgs
recolorize.obj <- recolorize(imgs[2])
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
layout(matrix(1:8, nrow = 2, byrow = TRUE))
sapply(1:8, function(i) plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = 0)))
layout(matrix(1:16, nrow = 4))
for (i in 1:4) {
for (j in 1:4) {
plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = j))
}
}
library(recolorize)
# filepath to image
img <- system.file("extdata/corbetti.png", package = "recolorize")
# default: histogram, 2 bins/channel
orig_fit <- recolorize(img)
# easier to count the colors:
recolorize::plotRecolorized(orig_fit$recolored.img,
orig_fit$original.img,plot.original = TRUE,
orig_fit$centers, horiz = TRUE)
# first let's get the bitmaps:
layout(matrix(1:8, nrow = 2))
layers <- splitByColor(orig_fit)
reds <- layers[c(3, 5)]
layout(matrix(1:3, nrow = 1))
plotImageArray(reds[[1]])
plotImageArray(reds[[2]])
plotImageArray(reds[[1]] + reds[[2]])
# NEXT UP:
# [x] Werner colors
# [ ] colordistance transparencies!!!
# [ ] Merging layers
# [ ] Cleaning layers
# [ ] Plot method for "recolorize" class
library(recolorize)
library(imager)
# filepath to image
img <- system.file("extdata/corbetti.png", package = "recolorize")
# default: histogram, 2 bins/channel
recolorize.obj <- recolorize(img)
# get the original thing
original <- recolorize.obj$recolored.img
color_combine <- list(c(3, 5),
c(4, 7),
c(6, 8))
change_to <- "weighted average"
fill_val <- 2
clean_val <- 4
# first, we split into layers
layers <- splitByColor(recolorize.obj, plot_method = "none")
# and convert the original image to a cimg object:
cimg_obj <- recolorize:::array.to.cimg(original)
plot(cimg_obj)
# get colors:
color_centers <- recolorize.obj$centers
color_sizes <- recolorize.obj$sizes
recolorize.obj <- recolorize(img)
layer_idx <- 1:8
clean_val <- 1
fill_val <- 1
change_to <- "original"
cleanLayers <- function(recolorize.obj,
layer_idx = "all",
clean = 2, fill = 2,
color_to = "original") {
layers <- splitByColor(recolorize.obj, plot_method = "none")
cimg_obj <- recolorize:::array.to.cimg(recolorize.obj$recolored.img)
if (layer_idx == "all") {
layer_idx <- 1:nrow(recolorize.obj$centers)
}
for (i in 1:length(layer_idx)) {
if(change_to == "original") {
col_to <- recolorize.obj$centers[layer_idx[i], ]
} else {
if (is.matrix(change_to)) {
col_to <- change_to[i, ]
} else {
col_to <- change_to[i]
}
}
orig_layer <- imager::as.cimg(layers[[layer_idx[i]]]) > 0
cimg_obj <- imager::colorise(cimg_obj, orig_layer, "white")
new_layer <- imager::fill(imager::as.cimg(orig_layer), fill)
new_layer <- imager::clean(new_layer, clean)
cimg_obj <- imager::colorise(cimg_obj, new_layer, col = col_to)
}
return(recolorize:::cimg.to.array(cimg_obj))
}
imgs <- dir(system.file("extdata/", package = "recolorize"), full.names = TRUE)
layout(matrix(1:16, nrow = 4))
for (i in 1:4) {
for (j in 1:4) {
plotImageArray(cleanLayers(recolorize.obj,
clean = i,
fill = j))
}
}
