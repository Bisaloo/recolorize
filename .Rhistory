devtools::load_all(".")
devtools::load_all(".")
?recolorizeVector
img <- system.file("extdata/corbetti.png", package = "recolorize")
rc <- recolorize2(img, cutoff = 45)
as_vector <- vector_recolorize(rc, smoothness = 5)
as_vector <- recolorizeVector
as_vector <- recolorizeVector(rc)
as_vector <- recolorizeVector(rc, smoothness = 5)
plot(as_vector)
class(as_vector)
x <- as_vector
requireNamespace("sp", quietly = TRUE)
# initialize plot
plot(x$base_layer, col = x$base_color,
border = x$base_color,
asp = x$asp,
...)
# initialize plot
plot(x$base_layer, col = x$base_color,
border = x$base_color,
asp = x$asp)
for (i in 1:length(x$layers)) {
# rgb colors
col <- x$layer_colors[i]
# add to plot
plot(x$layers[[i]],
col = col,
border = col,
add = TRUE,
...)
}
for (i in 1:length(x$layers)) {
# rgb colors
col <- x$layer_colors[i]
# add to plot
plot(x$layers[[i]],
col = col,
border = col,
add = TRUE)
}
?recolorizeVector
?recolorizeVector
?recolorizeVector
## Not run:
img <- system.file("extdata/corbetti.png", package = "recolorize")
rc <- recolorize2(img, cutoff = 45)
as_vector <- recolorizeVector(rc, smoothness = 5)
# clean up minor details (i.e. absorb stray components <= 5 pixels)
for (i in 1:nrow(rc$centers)) {
rc <- absorbLayer(rc, i, function(s) s <= 5,
plotting = F)
}
as_vector <- recolorizeVector(rc, smoothness = 5)
plot(as_vector)
plot.recolorizeVector(as_vector)
x <- as_vector
as_vector <- recolorizeVector(rc, smoothness = 5, plotting = T)
requireNamespace("sp")
as_vector <- recolorizeVector(rc, smoothness = 5, plotting = T)
?requireMethods()
?UseMethod()
UseMethod("plot.SpatialPolygons", as_vector$base_layer)
UseMethod("plot", as_vector$base_layer)
plot(as_vector$base_layer)
devtools::load_all(".")
plot(as_vector)
?`@importMethodsFrom`
?sp:::plot.SpatialPolygons
??`plot,SpatialPolygons,missing-method`
sp::plot()
devtools::load_all(".")
plot(as_vector)
?recolorizeVector
img <- system.file("extdata/corbetti.png", package = "recolorize")
rc <- recolorize2(img, cutoff = 45)
# clean up minor details (i.e. absorb stray components <= 5 pixels)
for (i in 1:nrow(rc$centers)) {
rc <- absorbLayer(rc, i, function(s) s <= 5,
plotting = F)
}
# takes ~10 seconds
as_vector <- recolorizeVector(rc, smoothness = 5)
# to save as an SVG with a transparent background and
# no margins (e.g. for an illustration figure):
grDevices::svg("recolorize_vector.svg",
height = 4, width = 2, bg = "transparent")
par(mar = rep(0, 4))
plot(as_vector)
dev.off()
images <- dir(system.file("extdata/", package = "recolorize"),
".png",
full.names = TRUE)
rc <- recolorize2(images[i], bins = 3,
cutoff = 50, plotting = TRUE)
rc <- recolorize2(images[1], bins = 3,
cutoff = 50, plotting = TRUE)
for (i in 1:nrow(rc$centers)) {
rc <- absorbLayer(rc, i,
size_condition = function(s) s <= 5,
plotting = FALSE)
}
plot(rc)
v <- recolorizeVector(rc, smoothness = 3,
plotting = TRUE)
v <- recolorizeVector(rc, smoothness = 5,
plotting = TRUE)
v <- recolorizeVector(rc, smoothness = 25,
plotting = TRUE)
rc <- recolorize2(images[2], bins = 3,
cutoff = 50, plotting = TRUE)
rc <- recolorize2(images[3], bins = 3,
cutoff = 50, plotting = TRUE)
for (i in 1:nrow(rc$centers)) {
rc <- absorbLayer(rc, i,
size_condition = function(s) s <= 5,
plotting = FALSE)
}
plot(rc)
rc <- recolorize2(images[4], bins = 3,
cutoff = 50, plotting = TRUE)
for (i in 1:nrow(rc$centers)) {
rc <- absorbLayer(rc, i,
size_condition = function(s) s <= 5,
plotting = FALSE)
}
plot(rc)
v <- recolorizeVector(rc, smoothness = 5,
plotting = TRUE)
rc <- recolorize2(images[4], bins = 3,
cutoff = 50, plotting = TRUE)
for (i in 1:nrow(rc$centers)) {
rc <- absorbLayer(rc, i,
size_condition = function(s) s <= 2,
plotting = FALSE)
}
v <- recolorizeVector(rc, smoothness = 5,
plotting = TRUE)
rc <- recolorize2(images[4], bins = 3,
cutoff = 50, plotting = TRUE)
for (i in 1:nrow(rc$centers)) {
rc <- absorbLayer(rc, i,
size_condition = function(s) s <= 20,
plotting = FALSE)
}
plot(rc)
v <- recolorizeVector(rc, smoothness = 5,
plotting = TRUE)
dim(rc$original_img)
dim(rc$original_img) * 0.01
dim(rc$original_img) * 0.03
round(dim(rc$original_img) * 0.03)
min(round(dim(rc$original_img) * 0.03))
min(round(dim(rc$original_img) * 0.10))
size_filter <- min(round(dim(rc$original_img) * size_filter))
size_filter = 0.1
devtools::load_all(".")
?recolorizeVector
img <- system.file("extdata/corbetti.png", package = "recolorize")
rc <- recolorize2(img, cutoff = 45)
# takes ~10 seconds
as_vector <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.05)
plot(as_vector)
rc <- recolorize2(images[4], bins = 3,
cutoff = 50, plotting = TRUE)
for (i in 1:nrow(rc$centers)) {
rc <- absorbLayer(rc, i,
size_condition = function(s) s <= 20,
plotting = FALSE)
}
plot(rc)
rc <- recolorize2(images[4], bins = 3,
cutoff = 50, plotting = TRUE)
v <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.15,
plotting = TRUE)
rc <- recolorize2(images[2], bins = 2,
cutoff = 45, plotting = TRUE)
v <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.15,
plotting = TRUE)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
plotImageArray(recoloredImage(rc))
plot(v)
title("recolorize", font.main = 1)
title("recolorize", font.main = 2)
title("recolorize", font.main = 3)
plotImageArray(recoloredImage(rc))
title("recolorize", font.main = 3)
title("recolorize", font.main = 4)
plotImageArray(recoloredImage(rc))
title("recolorize", font.main = 4)
plotImageArray(recoloredImage(rc))
title("recolorize", font.main = 5)
plotImageArray(recoloredImage(rc))
title("recolorize", font.main = 6)
plotImageArray(recoloredImage(rc))
title("recolorize", font.main = 1)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original")
plotImageArray(recoloredImage(rc))
title("recolorize")
plot(v)
title("recolorizeVector")
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = -4, font.main = 1, cex.main = 2)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = -4, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = -4, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = -4, font.main = 1, cex.main = 2)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = -4, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = -4, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = -4, font.main = 1, cex.main = 2)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = -2.5, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = -2.5, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = -2.5, font.main = 1, cex.main = 2)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = -2, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = -2, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = -2, font.main = 1, cex.main = 2)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = -2, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = -2, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = -1.5, font.main = 1, cex.main = 2)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = -1.5, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = -1.5, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = -1, font.main = 1, cex.main = 2)
pdf("temp.pdf", height = 3, width = 4)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = -1.5, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = -1.5, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = -1, font.main = 1, cex.main = 2)
dev.off()
pdf("temp.pdf", height = 4, width = 6)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = -1.5, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = -1.5, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = -1, font.main = 1, cex.main = 2)
dev.off()
pdf("temp.pdf", height = 5, width = 8)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = -1.5, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = -1.5, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = -1, font.main = 1, cex.main = 2)
dev.off()
pdf("temp.pdf", height = 5, width = 9)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = 0, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = 0, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = 0, font.main = 1, cex.main = 2)
dev.off()
pdf("temp.pdf", height = 5, width = 9)
layout(matrix(1:3, 1), widths = c(0.3, 0.3, 0.4))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = 0, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = 0, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = 0, font.main = 1, cex.main = 2)
dev.off()
pdf("temp.pdf", height = 6, width = 9)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
title("original", line = 0, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
title("recolorize", line = 0, font.main = 1, cex.main = 2)
plot(v)
title("recolorizeVector", line = 0, font.main = 1, cex.main = 2)
dev.off()
pdf("temp.pdf", height = 6, width = 9)
layout(matrix(1:3, 1))
plotImageArray(recolorize:::raster_to_array(rc$original_img))
#title("original", line = 0, font.main = 1, cex.main = 2)
plotImageArray(recoloredImage(rc))
#title("recolorize", line = 0, font.main = 1, cex.main = 2)
plot(v)
#title("recolorizeVector", line = 0, font.main = 1, cex.main = 2)
dev.off()
images <- dir(system.file("extdata/", package = "recolorize"),
".png",
full.names = TRUE)
rc <- recolorize2(images[1], bins = 2,
cutoff = 45, plotting = TRUE)
rc <- recolorize2(images[1], bins = 2,
cutoff = 25, plotting = TRUE)
v <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.15,
plotting = TRUE)
rc <- recolorize2(images[1], bins = 2,
cutoff = 25, plotting = TRUE)
l <- vector("list", length(images))
rc <- recolorize2(images[i], bins = 2,
cutoff = 25, plotting = TRUE)
i <- 1
l <- vector("list", length(images))
i <- 1
rc <- recolorize2(images[i], bins = 2,
cutoff = 25, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.10,
plotting = F); plot(l[[i]])
i <- 2
rc <- recolorize2(images[i], bins = 2,
cutoff = 45, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.15,
plotting = F); plot(l[[i]])
i
plot(rc)
plot(l[[1]])
i <- 3
rc <- recolorize2(images[i], bins = 2,
cutoff = 45, plotting = TRUE)
rc <- recolorize2(images[i], bins = 2,
cutoff = 15, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.05,
plotting = F); plot(l[[i]])
l[[i]] <- recolorizeVector(rc, smoothness = 3,
size_filter = 0.1,
plotting = F); plot(l[[i]])
i <- 4
rc <- recolorize2(images[i], bins = 2,
cutoff = 15, plotting = TRUE)
rc <- recolorize2(images[i], bins = 3,
cutoff = 45, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 3,
size_filter = 0.1,
plotting = F); plot(l[[i]])
l[[i]] <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.1,
plotting = F); plot(l[[i]])
l[[i]] <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.15,
plotting = F); plot(l[[i]])
i <- 3
rc <- recolorize2(images[i], bins = 3,
cutoff = 45, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.05,
plotting = F); plot(l[[i]])
l[[i]] <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.15,
plotting = F); plot(l[[i]])
i <- 5
rc <- recolorize2(images[i], bins = 3,
cutoff = 45, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.15,
plotting = F); plot(l[[i]])
layout(matrix(1:5, 1))
lapply(l, plot)
for (i in 1:length(l)) {
i <- 1
rc <- recolorize2(images[i], bins = 3,
cutoff = 45, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.15,
plotting = F)
}
layout(matrix(1:5, 1))
lapply(l, plot)
for (i in 1:length(l)) {
rc <- recolorize2(images[i], bins = 3,
cutoff = 45, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 5,
size_filter = 0.15,
plotting = F)
}
layout(matrix(1:5, 1))
lapply(l, plot)
sum( c(0.15, 0.25, 0.23, 0.15, 0.23))
layout(matrix(1:5, 1), widths = c(0.15, 0.25, 0.23, 0.15, 0.22))
lapply(l, plot)
layout(matrix(1:5, 1), widths = c(0.17, 0.25, 0.23, 0.15, 0.22))
lapply(l, plot)
layout(matrix(1:5, 1), widths = c(0.18, 0.25, 0.23, 0.15, 0.22))
lapply(l, plot)
layout(matrix(1:5, 1), widths = c(0.18, 0.25, 0.23, 0.2, 0.22))
lapply(l, plot)
layout(matrix(1:5, 1), widths = c(0.18, 0.25, 0.23, 0.18, 0.22))
lapply(l, plot)
layout(matrix(1:5, 1), widths = c(0.18, 0.25, 0.23, 0.19, 0.21))
lapply(l, plot)
l <- vector("list", length(images))
for (i in 1:length(l)) {
rc <- recolorize2(images[i], bins = 2,
cutoff = 0, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 20,
size_filter = 0.2,
plotting = F)
}
layout(matrix(1:5, 1), widths = c(0.18, 0.25, 0.23, 0.19, 0.21))
lapply(l, plot)
plot(l[[4]])
plot(l[[5]])
l <- vector("list", length(images))
for (i in 1:length(l)) {
rc <- recolorize2(images[i], bins = 3,
cutoff = 50, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 10,
size_filter = 0.2,
plotting = F)
}
layout(matrix(1:5, 1), widths = c(0.18, 0.25, 0.23, 0.19, 0.21))
lapply(l, plot)
for (i in 1:length(l)) {
rc <- recolorize2(images[i], bins = 3,
cutoff = 50, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 20,
size_filter = 0.15,
plotting = T)
}
layout(matrix(1:5, 1), widths = c(0.18, 0.25, 0.23, 0.19, 0.21))
lapply(l, plot)
for (i in 1:length(l)) {
rc <- recolorize2(images[i], bins = 3,
cutoff = 50, plotting = TRUE)
l[[i]] <- recolorizeVector(rc, smoothness = 30,
size_filter = 0.15,
plotting = T)
}
layout(matrix(1:5, 1), widths = c(0.18, 0.25, 0.23, 0.19, 0.21))
lapply(l, plot)
?recolorizeVector
img <- "../misc_images/piranha.png"
rc <- recolorize2(img)
rc <- recolorize2(img, resize = 0.5)
v <- recolorizeVector(rc, smoothness = 10, plotting = TRUE)
plot(v)
plot(v)
v <- recolorizeVector(rc, smoothness = 5, plotting = TRUE)
v <- recolorizeVector(rc, smoothness = 30, plotting = TRUE)
img <- "../demo/Pygoplites_EKaran.png"
rc <- recolorize2(img, resize = 0.5)
rc <- recolorize2(img, resize = 0.5, cutoff = 40)
v <- recolorizeVector(rc, smoothness = 5, plotting = TRUE)
layout(2)
layout(1:2)
plotImageArray(readImage(img, resize = .25))
plot(v)
layout(matrix(1:2, nrow = 1))
plotImageArray(readImage(img, resize = .25))
layout(matrix(1:2, nrow = 1))
plotImageArray(readImage(img, resize = .25))
plot(v)
layout(matrix(1:2, nrow = 1))
par(mar = rep(0, 4))
plotImageArray(readImage(img, resize = .25))
plot(v)
?pavo::adjacent
devtools::load_all(".")
install.packages("imager")
install.packages("imager")
img <- "~/Dropbox/spatial_comp_seminar/adam.png"
rc <- recolorize::recolorize2(img, bins = 5)
devtools::load_all(".")
rc <- recolorize2(img, bins = 5)
rc <- recolorize2(img, bins = 3, cutoff = 20)
rc <- recolorize2(img, bins = 4, cutoff = 20)
v <- recolorizeVector(rc)
v <- recolorizeVector(rc, size_filter = 0)
rc <- recolorize2(img, bins = 4, cutoff = 20, resize = 0.5)
v <- recolorizeVector(rc, size_filter = 0)
plot(v)
v <- recolorizeVector(rc, size_filter = 0, smoothness = 5)
plot(v)
plot(rc)
v <- recolorizeVector(rc, size_filter = 0, base_color = 8, smoothness = 5)
plot(v)
img <- "~/Dropbox/spatial_comp_seminar/class.png"
rc <- recolorize2(img, bins = 4, cutoff = 20, resize = 0.5)
v <- recolorizeVector(rc, size_filter = .05, base_color = 4, smoothness = 5)
v <- recolorizeVector(rc, size_filter = 0, base_color = 4, smoothness = 5)
plot(v)
