% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imDist.R
\name{imDist}
\alias{imDist}
\title{Calculates the distance between non-transparent pixels in images}
\usage{
imDist(
  im1,
  im2,
  color.space = "Lab",
  ref.white = "D65",
  metric = "euclidean",
  plotting = TRUE,
  palette = "default"
)
}
\arguments{
\item{im1, im2}{Images to compare; must have the same dimensions. Distances
will be calculated between each pair of non-transparent pixels.}

\item{color.space}{Color space in which to calculate distances. One of
"sRGB", "Lab", "Luv", or "XYZ". Passed to
\code{\link[grDevices]{convertColor}}.}

\item{ref.white}{Passed to \code{\link[grDevices]{convertColor}} if
\verb{color.space = "Lab}. Reference white for CIE Lab space.}

\item{metric}{Distance metric to be used for calculating pairwise pixel
distances in the given color space; passed to \code{\link[stats]{dist}}.}

\item{plotting}{Logical. Plot heatmap of color distances?}

\item{palette}{If plotting, the color palette to be used. Default is blue to
red (\code{colorRamps::matlab.like(100)}).}
}
\value{
A matrix of the same dimensions as the original images,
with the distance between non-transparent pixels at each pixel coordinate.
Transparent pixels are returned as \code{NA}.
}
\description{
Compares two versions of the same image (probably original and recolored)
by calculating the color distance between the colors of each pair of pixels.
}
\examples{
# make an initial histogram fit
ocellata <- system.file("extdata/ocellata.png", package = "recolorize")
ocellata_2bin <- recolorize(ocellata, "hist", bins = 2)
dist_2bin <- imDist(ocellata_2bin$original.img,
                    ocellata_2bin$recolored.img)

# we can compare it to finer binning
ocellata_3bin <- recolorize(ocellata, "hist", bins = 3)
dist_3bin <- imDist(ocellata_3bin$original.img,
                    ocellata_3bin$recolored.img, plotting = FALSE)

# to make the scales even, we can combine the color distance matrices first
combo <- cbind(dist_2bin, dist_3bin)

# 2 bin on the left, 3 bin on the right:
imHeatmap(combo)

}
